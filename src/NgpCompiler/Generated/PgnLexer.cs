//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Ezequiel Demetras/Documents/Projetos/Ngp/src/NgpCompiler/Pgn.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace NgpCompiler.Generated {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class PgnLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WS=1, EVENT=2, SITE=3, DATE=4, ROUND=5, WHITE=6, BLACK=7, WHITEELO=8, 
		BLACKELO=9, WHITETITLE=10, BLACKTITLE=11, RESULT=12, GAMEID=13, VARIANT=14, 
		TIMECONTROL=15, ECO=16, OPENING=17, TERMINATION=18, ANNOTATOR=19, WHITEFIDEID=20, 
		BLACKFIDEID=21, STUDYNAME=22, CHAPTERNAME=23, LBRACE=24, RBRACE=25, STRING_VALUE=26, 
		ANALYSIS=27;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "EVENT", "SITE", "DATE", "ROUND", "WHITE", "BLACK", "WHITEELO", 
		"BLACKELO", "WHITETITLE", "BLACKTITLE", "RESULT", "GAMEID", "VARIANT", 
		"TIMECONTROL", "ECO", "OPENING", "TERMINATION", "ANNOTATOR", "WHITEFIDEID", 
		"BLACKFIDEID", "STUDYNAME", "CHAPTERNAME", "LBRACE", "RBRACE", "STRING_VALUE", 
		"ANALYSIS"
	};


	public PgnLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PgnLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'Event'", "'Site'", "'Date'", "'Round'", "'White'", "'Black'", 
		"'WhiteElo'", "'BlackElo'", "'WhiteTitle'", "'BlackTitle'", "'Result'", 
		"'GameId'", "'Variant'", "'TimeControl'", "'ECO'", "'Opening'", "'Termination'", 
		"'Annotator'", "'WhiteFideId'", "'BlackFideId'", "'StudyName'", "'ChapterName'", 
		"'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "EVENT", "SITE", "DATE", "ROUND", "WHITE", "BLACK", "WHITEELO", 
		"BLACKELO", "WHITETITLE", "BLACKTITLE", "RESULT", "GAMEID", "VARIANT", 
		"TIMECONTROL", "ECO", "OPENING", "TERMINATION", "ANNOTATOR", "WHITEFIDEID", 
		"BLACKFIDEID", "STUDYNAME", "CHAPTERNAME", "LBRACE", "RBRACE", "STRING_VALUE", 
		"ANALYSIS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Pgn.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PgnLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,27,271,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,1,0,4,0,57,8,0,
		11,0,12,0,58,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,
		3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
		1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
		8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,
		1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
		1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
		1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
		1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,
		1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
		1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
		1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,
		1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,24,
		1,24,1,25,1,25,1,25,1,25,5,25,259,8,25,10,25,12,25,262,9,25,1,25,1,25,
		1,26,1,26,1,26,1,26,1,26,1,26,0,0,27,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
		8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
		20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,1,0,3,3,0,9,10,13,13,32,32,
		2,0,34,34,92,92,1,0,46,46,273,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,1,56,1,0,0,0,3,62,1,0,0,0,5,68,1,0,0,0,7,73,1,0,0,
		0,9,78,1,0,0,0,11,84,1,0,0,0,13,90,1,0,0,0,15,96,1,0,0,0,17,105,1,0,0,
		0,19,114,1,0,0,0,21,125,1,0,0,0,23,136,1,0,0,0,25,143,1,0,0,0,27,150,1,
		0,0,0,29,158,1,0,0,0,31,170,1,0,0,0,33,174,1,0,0,0,35,182,1,0,0,0,37,194,
		1,0,0,0,39,204,1,0,0,0,41,216,1,0,0,0,43,228,1,0,0,0,45,238,1,0,0,0,47,
		250,1,0,0,0,49,252,1,0,0,0,51,254,1,0,0,0,53,265,1,0,0,0,55,57,7,0,0,0,
		56,55,1,0,0,0,57,58,1,0,0,0,58,56,1,0,0,0,58,59,1,0,0,0,59,60,1,0,0,0,
		60,61,6,0,0,0,61,2,1,0,0,0,62,63,5,69,0,0,63,64,5,118,0,0,64,65,5,101,
		0,0,65,66,5,110,0,0,66,67,5,116,0,0,67,4,1,0,0,0,68,69,5,83,0,0,69,70,
		5,105,0,0,70,71,5,116,0,0,71,72,5,101,0,0,72,6,1,0,0,0,73,74,5,68,0,0,
		74,75,5,97,0,0,75,76,5,116,0,0,76,77,5,101,0,0,77,8,1,0,0,0,78,79,5,82,
		0,0,79,80,5,111,0,0,80,81,5,117,0,0,81,82,5,110,0,0,82,83,5,100,0,0,83,
		10,1,0,0,0,84,85,5,87,0,0,85,86,5,104,0,0,86,87,5,105,0,0,87,88,5,116,
		0,0,88,89,5,101,0,0,89,12,1,0,0,0,90,91,5,66,0,0,91,92,5,108,0,0,92,93,
		5,97,0,0,93,94,5,99,0,0,94,95,5,107,0,0,95,14,1,0,0,0,96,97,5,87,0,0,97,
		98,5,104,0,0,98,99,5,105,0,0,99,100,5,116,0,0,100,101,5,101,0,0,101,102,
		5,69,0,0,102,103,5,108,0,0,103,104,5,111,0,0,104,16,1,0,0,0,105,106,5,
		66,0,0,106,107,5,108,0,0,107,108,5,97,0,0,108,109,5,99,0,0,109,110,5,107,
		0,0,110,111,5,69,0,0,111,112,5,108,0,0,112,113,5,111,0,0,113,18,1,0,0,
		0,114,115,5,87,0,0,115,116,5,104,0,0,116,117,5,105,0,0,117,118,5,116,0,
		0,118,119,5,101,0,0,119,120,5,84,0,0,120,121,5,105,0,0,121,122,5,116,0,
		0,122,123,5,108,0,0,123,124,5,101,0,0,124,20,1,0,0,0,125,126,5,66,0,0,
		126,127,5,108,0,0,127,128,5,97,0,0,128,129,5,99,0,0,129,130,5,107,0,0,
		130,131,5,84,0,0,131,132,5,105,0,0,132,133,5,116,0,0,133,134,5,108,0,0,
		134,135,5,101,0,0,135,22,1,0,0,0,136,137,5,82,0,0,137,138,5,101,0,0,138,
		139,5,115,0,0,139,140,5,117,0,0,140,141,5,108,0,0,141,142,5,116,0,0,142,
		24,1,0,0,0,143,144,5,71,0,0,144,145,5,97,0,0,145,146,5,109,0,0,146,147,
		5,101,0,0,147,148,5,73,0,0,148,149,5,100,0,0,149,26,1,0,0,0,150,151,5,
		86,0,0,151,152,5,97,0,0,152,153,5,114,0,0,153,154,5,105,0,0,154,155,5,
		97,0,0,155,156,5,110,0,0,156,157,5,116,0,0,157,28,1,0,0,0,158,159,5,84,
		0,0,159,160,5,105,0,0,160,161,5,109,0,0,161,162,5,101,0,0,162,163,5,67,
		0,0,163,164,5,111,0,0,164,165,5,110,0,0,165,166,5,116,0,0,166,167,5,114,
		0,0,167,168,5,111,0,0,168,169,5,108,0,0,169,30,1,0,0,0,170,171,5,69,0,
		0,171,172,5,67,0,0,172,173,5,79,0,0,173,32,1,0,0,0,174,175,5,79,0,0,175,
		176,5,112,0,0,176,177,5,101,0,0,177,178,5,110,0,0,178,179,5,105,0,0,179,
		180,5,110,0,0,180,181,5,103,0,0,181,34,1,0,0,0,182,183,5,84,0,0,183,184,
		5,101,0,0,184,185,5,114,0,0,185,186,5,109,0,0,186,187,5,105,0,0,187,188,
		5,110,0,0,188,189,5,97,0,0,189,190,5,116,0,0,190,191,5,105,0,0,191,192,
		5,111,0,0,192,193,5,110,0,0,193,36,1,0,0,0,194,195,5,65,0,0,195,196,5,
		110,0,0,196,197,5,110,0,0,197,198,5,111,0,0,198,199,5,116,0,0,199,200,
		5,97,0,0,200,201,5,116,0,0,201,202,5,111,0,0,202,203,5,114,0,0,203,38,
		1,0,0,0,204,205,5,87,0,0,205,206,5,104,0,0,206,207,5,105,0,0,207,208,5,
		116,0,0,208,209,5,101,0,0,209,210,5,70,0,0,210,211,5,105,0,0,211,212,5,
		100,0,0,212,213,5,101,0,0,213,214,5,73,0,0,214,215,5,100,0,0,215,40,1,
		0,0,0,216,217,5,66,0,0,217,218,5,108,0,0,218,219,5,97,0,0,219,220,5,99,
		0,0,220,221,5,107,0,0,221,222,5,70,0,0,222,223,5,105,0,0,223,224,5,100,
		0,0,224,225,5,101,0,0,225,226,5,73,0,0,226,227,5,100,0,0,227,42,1,0,0,
		0,228,229,5,83,0,0,229,230,5,116,0,0,230,231,5,117,0,0,231,232,5,100,0,
		0,232,233,5,121,0,0,233,234,5,78,0,0,234,235,5,97,0,0,235,236,5,109,0,
		0,236,237,5,101,0,0,237,44,1,0,0,0,238,239,5,67,0,0,239,240,5,104,0,0,
		240,241,5,97,0,0,241,242,5,112,0,0,242,243,5,116,0,0,243,244,5,101,0,0,
		244,245,5,114,0,0,245,246,5,78,0,0,246,247,5,97,0,0,247,248,5,109,0,0,
		248,249,5,101,0,0,249,46,1,0,0,0,250,251,5,91,0,0,251,48,1,0,0,0,252,253,
		5,93,0,0,253,50,1,0,0,0,254,260,5,34,0,0,255,259,8,1,0,0,256,257,5,92,
		0,0,257,259,9,0,0,0,258,255,1,0,0,0,258,256,1,0,0,0,259,262,1,0,0,0,260,
		258,1,0,0,0,260,261,1,0,0,0,261,263,1,0,0,0,262,260,1,0,0,0,263,264,5,
		34,0,0,264,52,1,0,0,0,265,266,5,123,0,0,266,267,7,2,0,0,267,268,5,125,
		0,0,268,269,1,0,0,0,269,270,6,26,0,0,270,54,1,0,0,0,4,0,58,258,260,1,6,
		0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace NgpCompiler.Generated
